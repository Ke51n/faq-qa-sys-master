package com.example.tmp;


/**
 * package:  com.example.tmp
 * project_name:  faq-qa-sys-master
 * 2023/2/23  21:44
 * description:
 *
 * @author wk
 * @version 1.0
 */

public class temp {
    public static void main(String[] args) {
//        String query = "非经常性指标是什么";
//        String text = "（三）关于管理方式" +
//                "　　《信用办法》第六条明确税务总局推进纳税信用管理工作的信息化，规范统一纳税信用管理，尽量减少人为干预，切实减轻纳税人和基层税务机关的工作负担。" +
//                "\n" +
//                "　　（四）关于经常性指标和非经常性指标及扣分基础" +
//                "　　经常性指标是纳税人在评价年度内经常产生的指标信息，包括：涉税申报信息、税（费）款缴纳信息、发票与税控器具信息、登记与账簿信息；非经常性指标是纳税人在评价年度内不经常产生的税务检查等指标信息，主要指税务部门开展的纳税评估、税务审计、反避税调查信息和税务稽查信息。纳税人评价年度内经常性指标和非经常性指标信息齐全的，从100分扣起；非经常性指标缺失的，从90分扣起。" +
//                "\n" +
//                "　　（五）关于纳税信用评价周期" +
//                "　　《信用办法》第十七条规定，纳税信用评价周期为一个纳税年度。参照企业所得税法、《最高人民法院关于审理偷税抗税刑事案件具体应用法律若干问题的解释》的相关规定，《信用办法》所称“纳税年度”为自然年，从1月1日到12月31日。" +
//                "\n" +
//                "　　（六）关于不参加本期信用评价的情形" +
//                "　　《信用办法》第十七条规定纳税人在评价年度内如果有6种情形之一，则不参加本期的信用评价。其中“纳入纳税信用管理时间不满一个评价年度的”是指在评价年度内新办理税务登记的纳税人。“本评价年度内无生产经营业务收入的”是指纳税人在评价年度内无主营业务收入申报的，此类情形常见于筹建中、停业或者歇业的纳税人等。“因涉嫌税收违法被立案查处尚未结案”，包括税务机关立案查处尚未结案或是司法机关立案查处尚未结案的情形，不包括特别纳税调整调查。因相关部门检查（不包括特别纳税调整）、审计或者处于复议、诉讼阶段尚未结案的纳税人，在当期评价年度内不参与信用评价，但《信用办法》第二十五条规定，如果所列情形解除，纳税人可以向税务机关申请补充纳税信用评价，税务机关应补录纳税人的信用评价结果。";
//        String res = SelectParagraphs.selectMostRelevantParas(query, text);
//        System.out.println(res);

//        String text="《信用办法》 第六条明确税务总局推\n进纳税信用管理工作的信息化，\n规范统一纳";
//        String[] paras = text.split(" ");
//        for (String para : paras) {
//            System.out.println(para);
//        }
        temp tester = new temp();

        // 类型声明

//
//        */
//        new Thread(
//                () -> {
//                    while (true) {
//                        System.out.println("Thread run()");
//                        System.out.println("1111111111");
//                        try {
//                            Thread.sleep(1000);
//                        } catch (InterruptedException e) {
//                            throw new RuntimeException(e);
//                        }
//                    }
//                }
//        ).start();
    }
}
